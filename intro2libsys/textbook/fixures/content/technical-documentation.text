No matter how well a software program is written and functions, if documentation
is lacking on how to use the software, or worse, doesn't exist, then the likelihood
that the software will be used to its full potential is significantly reduced.

Documentation for software is not just restricted to end-user help. If the software
itself is poorly documented, the costs to find and fix any bugs or to add functionality
increases for the developers that are responsible for maintaining the software. A dirty
secret in open-source software development is even when the original developer is 
also the maintainer, the lack of documentation in the source code still causes problems.

Agile development explictly rejects the idea that software should be documented in a 
comprehensive manner. This comes from some software development methodogies that require
that the software projects be exhaustively documented with very detailed descriptions of
classes, functions, and data structures before a single line of code is written. The 
biggest problem with this approach is that software is complex and the design may actually
hinder the implementation of the software because the developer must code to the design
and not to functionality that is trying to be met.

Application to Libraries
------------------------
While libraries may not need to provide the source-code documentation of the systems
they are using; often there is a need to supplement the technical documentation provided
by the vendor. Besides outlining the workflow steps to accomplish a specific task, library's
often include hints and other supplemently information that comes from experience using the
software.

Some of the reasons that people write and use documentation in an Agile process is outlined
below [#]_ :

  #. Your stack-holders require it - for libraries this may be a requirement from other
     reference or instruction libraries, or be a requirement by the library administration.

  #. Support communication with an external group - city administrations, campus administration,
     grant agencies, are all examples of library external groups that may require different 
     levels of documentation to support a library system.

  #. Support organizational memory - With libraries, the time horizon of any particular library
     system may span multiple people responsible for the library system. Documentation provides
     a historical memory of why certain work-flows are the way they are or helpful workarounds
     or local practice using or working with a software product or project.


.. [#] `Agile/Lean Documentation: Strategies for Agile Software Development`_

.. _`Agile/Lean Documentation: Strategies for Agile Software Development`: http://www.agilemodeling.com/essays/agileDocumentation.htm 
